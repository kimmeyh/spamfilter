{
  "description": "Memory bank configuration for OutlookMailSpamFilter project. Tracks development changes, architecture decisions, and project evolution.",
  "last_updated": "2025-10-11",
  "version": "2.3.0",
  "recent_changes": [
    {
      "date": "2025-10-11",
      "change": "Aligned memory-bank with REGEX-default mode; documented active rules files and CLI flags; excluded 0dev_prompts.md from sources.",
      "log_file": "logs/memory-bank-update-2025-10-11.json"
    },
    {
      "date": "2025-10-11",
      "change": "Added developer environment guide for venv creation/activation and linked from CLI usage.",
      "log_file": "logs/dev-environment-2025-10-11.json"
    },
    {
      "date": "2025-07-05", 
      "change": "Relocated all test files to pytest/ directory and updated all documentation references",
      "log_file": "logs/test-reorganization-2025-07-05.json"
    },
    {
      "date": "2025-07-05",
      "change": "Added comprehensive development standards and feature enhancement process guidelines",
      "log_file": "development-standards.md"
    },
    {
      "date": "2025-07-04",
      "change": "Implemented multi-folder processing capability",
      "log_file": "logs/multi-folder-implementation-2025-07-04.json"
    }
  ],
  "development_guidelines": {
    "standards_document": "development-standards.md",
    "core_principles": [
      "ONLY change code that HAS to be CHANGED",
      "Comment out code instead of deleting",
      "All tests must pass without errors or warnings",
      "All new features must have test coverage",
      "Preserve backward compatibility"
    ],
    "testing": {
      "test_location": "pytest/",
      "test_command": "python -m pytest pytest/ -v",
      "all_tests_must_pass": true
    }
  },
  "project_status": {
    "phase": "active_development",
    "branch": "feature/20251010_update_memory_bank",
    "next_milestone": "Consolidate regex mode as default; validate memory-bank documentation and sources"
  },
  "sources": {
    "include": [
      "withOutlookRulesYAML.py",
      "rules.yaml",
      "rulesregex.yaml",
      "rules_safe_senders.yaml",
      "rules_safe_sendersregex.yaml",
      "pytest/**",
      "README.md"
    ],
    "exclude": [
      "archive/**",
      ".pytest_cache/**",
      "__pycache__/**",
      ".vscode/**",
      "0dev_prompts.md"
    ]
  },
  "runtime": {
    "prefer_regex_files": true,
    "active_rules_file_regex": "rulesregex.yaml",
    "active_safe_senders_file_regex": "rules_safe_sendersregex.yaml",
    "active_rules_file_legacy": "rules.yaml",
    "active_safe_senders_file_legacy": "rules_safe_senders.yaml"
  },
  "files": {
    "rules": {
      "legacy": "rules.yaml",
      "regex": "rulesregex.yaml"
    },
    "safe_senders": {
      "legacy": "rules_safe_senders.yaml",
      "regex": "rules_safe_sendersregex.yaml"
    },
    "archive_dir": "archive/"
  },
  "cli": {
    "update_rules": "-u | --update_rules",
    "use_regex": "--use-regex-files (default on)",
    "use_legacy": "--use-legacy-files",
    "convert_rules_to_regex": "--convert-rules-to-regex",
    "convert_safe_senders_to_regex": "--convert-safe-senders-to-regex"
  },
  "notes": [
    "Regex mode is default; legacy mode remains available via CLI flag.",
    "Exporters lower-case, trim, de-duplicate, and sort lists; regex YAML uses single quotes for stability.",
    "Backups are written to archive/ with timestamp before overwriting active YAML files.",
    "Per instruction, do NOT use 0dev_prompts.md in generation or analysis."
  ]
}
